import{_ as o,l as e,K as s,d as p,L as m}from"./mermaid.core-CvvJtCRj.js";import{p as n}from"./treemap-75Q7IDZK-DR79Mhzt.js";import"./index-CelXfcd8.js";import"./transform-D9VCJYws.js";import"./timer-Bqd5yn_a.js";import"./step-BwsUM5iJ.js";import"./isEmpty-CqX_YTIf.js";import"./_baseEach--KDTwKbG.js";import"./_baseUniq-y7ZXnMo1.js";import"./min-DYUOb1RR.js";import"./_baseMap-Cu3o-eyO.js";import"./clone-YBEvPE-s.js";import"./_createAggregator-ZcHkHPNJ.js";var d={parse:o(async r=>{const t=await n("info",r);e.debug(t)},"parse")},g={version:m.version+""},v={parser:d,db:{getVersion:o(()=>g.version,"getVersion")},renderer:{draw:o((r,t,i)=>{e.debug(`rendering info diagram
`+r);const a=s(t);p(a,100,400,!0),a.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw")}};export{v as diagram};
